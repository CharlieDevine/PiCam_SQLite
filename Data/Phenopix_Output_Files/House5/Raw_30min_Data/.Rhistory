h1p10 = read.table(h1.files[10], header = TRUE)[,10]
h1.dates = as.Date(read.table(h1.files[10], header = TRUE)[,1])
h1.gcc = data.frame(h1p4, h1p2, h1p10, h1p1)
colnames(h1.gcc) = c('S1','S2','S3','S4')
# House 2
setwd(paste(pc.fp,'House2','Daily_Means',sep = '/'))
h2.files = list.files()
h2p4 = read.table(h2.files[4], header = TRUE)[,10]
h2p2 = read.table(h2.files[2], header = TRUE)[,10]
h2p3 = read.table(h2.files[3], header = TRUE)[,10]
h2p6 = read.table(h2.files[6], header = TRUE)[,10]
h2.dates = as.Date(read.table(h2.files[10], header = TRUE)[,1])
h2.gcc = data.frame(h2p4, h2p2, h2p3, h2p6)
colnames(h2.gcc) = c('S1','S2','S3','S4')
# House 3
setwd(paste(pc.fp,'House3','Daily_Means',sep = '/'))
h3.files = list.files()
h3p11 = read.table(h3.files[11], header = TRUE)[,10]
h3p9 = read.table(h3.files[9], header = TRUE)[,10]
h3p10 = read.table(h3.files[10], header = TRUE)[,10]
h3p7 = read.table(h3.files[7], header = TRUE)[,10]
h3.dates = as.Date(read.table(h3.files[10], header = TRUE)[,1])
h3.gcc = data.frame(h3p11, h3p9, h3p10, h3p7)
colnames(h3.gcc) = c('S1','S2','S3','S4')
# House 4
setwd(paste(pc.fp,'House4','Daily_Means',sep = '/'))
h4.files = list.files()
h4p10 = read.table(h4.files[10], header = TRUE)[,10]
h4p3 = read.table(h4.files[3], header = TRUE)[,10]
h4p2 = read.table(h4.files[2], header = TRUE)[,10]
h4p11 = read.table(h4.files[11], header = TRUE)[,10]
h4.dates = as.Date(read.table(h4.files[10], header = TRUE)[,1])
h4.gcc = data.frame(h4p10, h4p3, h4p2, h4p11)
colnames(h4.gcc) = c('S1','S2','S3','S4')
# House 5
setwd(paste(pc.fp,'House5','Daily_Means',sep = '/'))
h5.files = list.files()
h5p8 = read.table(h5.files[8], header = TRUE)[,10]
h5p9 = read.table(h5.files[9], header = TRUE)[,10]
h5p1 = read.table(h5.files[1], header = TRUE)[,10]
h5p2 = read.table(h5.files[2], header = TRUE)[,10]
h5.dates = as.Date(read.table(h5.files[10], header = TRUE)[,1])
h5.gcc = data.frame(h5p8, h5p9, h5p1, h5p2)
colnames(h5.gcc) = c('S1','S2','S3','S4')
# --------------- Group by treatment types also
s1.gcc = data.frame(h1.gcc[,1], h2.gcc[,1], h3.gcc[,1], h4.gcc[,1], h5.gcc[,1])
s2.gcc = data.frame(h1.gcc[,2], h2.gcc[,2], h3.gcc[,2], h4.gcc[,2], h5.gcc[,2])
s3.gcc = data.frame(h1.gcc[,3], h2.gcc[,3], h3.gcc[,3], h4.gcc[,3], h5.gcc[,3])
s4.gcc = data.frame(h1.gcc[,4], h2.gcc[,4], h3.gcc[,4], h4.gcc[,4], h5.gcc[,4])
# --------------- Z-score function
z.score.fun = function(data.in){
data.mean = mean(data.in, na.rm = TRUE)
data.sd = sd(data.in, na.rm = TRUE)
data.out = (data.in - data.mean) / data.sd
return(data.out)
}
s1.col = 'navy'
s2.col = 'steelblue'
s3.col = 'orange'
s4.col = 'tomato'
watering.col = rgb(0,0,1,0.25)
s1.lwd = 1
s2.lwd = 2
s3.lwd = 3
s4.lwd = 4
ts.pch = 1
s1.labs = c('H1S1','H2S1','H3S1','H4S1','H5S1')
s2.labs = c('H1S2','H2S2','H3S2','H4S2','H5S2')
s3.labs = c('H1S3','H2S3','H3S3','H4S3','H5S3')
s4.labs = c('H1S4','H2S4','H3S4','H4S4','H5S4')
cexmain = 1.6
cexlab = 1.4
# ----------- Mean function
mean.fun = function(h1,h2,h3,h4,h5){
h1.z = z.score.fun(h1)
h2.z = z.score.fun(h2)
h3.z = z.score.fun(h3)
h4.z = z.score.fun(h4)
h5.z = z.score.fun(h5)
len = length(h1)
mean = rep(NA, len)
for (i in 1 : len){
mean[i] = mean(c(h1.z[i],h2.z[i],h3.z[i],h4.z[i],h5.z[i]), na.rm = TRUE)
}
return(mean)
}
# ----------- Standard error function
se.fun = function(h1,h2,h3,h4,h5){
h1.z = z.score.fun(h1)
h2.z = z.score.fun(h2)
h3.z = z.score.fun(h3)
h4.z = z.score.fun(h4)
h5.z = z.score.fun(h5)
len = length(h1)
std = rep(NA, len)
se = rep(NA, len)
for (i in 1 : len){
std[i] = sd(c(h1.z[i],h2.z[i],h3.z[i],h4.z[i],h5.z[i]), na.rm = TRUE)
n = 5
se[i] = std[i]/(sqrt(n))
}
return(se)
}
s1.mean = mean.fun(h1.gcc[,1],h2.gcc[,1],h3.gcc[,1],h4.gcc[,1],h5.gcc[,1])
s2.mean = mean.fun(h1.gcc[,2],h2.gcc[,2],h3.gcc[,2],h4.gcc[,2],h5.gcc[,2])
s3.mean = mean.fun(h1.gcc[,3],h2.gcc[,3],h3.gcc[,3],h4.gcc[,3],h5.gcc[,3])
s4.mean = mean.fun(h1.gcc[,4],h2.gcc[,4],h3.gcc[,4],h4.gcc[,4],h5.gcc[,4])
s1.se = se.fun(h1.gcc[,1],h2.gcc[,1],h3.gcc[,1],h4.gcc[,1],h5.gcc[,1])
s2.se = se.fun(h1.gcc[,2],h2.gcc[,2],h3.gcc[,2],h4.gcc[,2],h5.gcc[,2])
s3.se = se.fun(h1.gcc[,3],h2.gcc[,3],h3.gcc[,3],h4.gcc[,3],h5.gcc[,3])
s4.se = se.fun(h1.gcc[,4],h2.gcc[,4],h3.gcc[,4],h4.gcc[,4],h5.gcc[,4])
s1.pe = s1.mean + s1.se
s1.ne = s1.mean - s1.se
s2.pe = s2.mean + s2.se
s2.ne = s2.mean - s2.se
s3.pe = s3.mean + s3.se
s3.ne = s3.mean - s3.se
s4.pe = s4.mean + s4.se
s4.ne = s4.mean - s4.se
dates = seq(as.Date('2020-07-01'),as.Date('2020-10-02'),'day')
par(mfrow = c(4,1),
mar = c(2,3,2,0),
oma = c(1,2,0,1))
y.lim = c(-2.2,2.2)
pchm = 16
# S1
plot(x = dates, y = s1.mean, ylim = y.lim,
type = 'l', col = s1.col,
xlab = '', ylab = '', cex.lab = 1.5, cex.axis = 1.5,
main = '', cex.main = 1.8)
lines(x = dates, y = s1.pe, col = s1.col, lty = 3)
lines(x = dates, y = s1.ne, col = s1.col, lty = 3)
polygon(x = c(dates,rev(dates)),
y = c(s1.pe,rev(s1.ne)),
col = s1.col, density = 20, angle = 90, lty = 3, fillOddEven = TRUE)
lines(x = dates, y = s1.mean, pch = pchm, col = s1.col, lwd = 3)
points(x = dates, y = s1.mean, pch = pchm, col = s1.col)
abline(h = 0, lwd = 1, col = rgb(0,0,0,0.25))
abline(v = as.Date('2020-07-14'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-07-17'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-07-20'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-07-23'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-07-27'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-07-30'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-03'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-06'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-10'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-13'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-17'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-20'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-24'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-27'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-31'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-03'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-07'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-10'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-14'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-17'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-21'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-24'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-28'), col = watering.col, lwd = s1.lwd)
# S2
plot(x = dates, y = s2.mean, ylim = y.lim,
type = 'l', col = s2.col,
xlab = '', ylab = '', cex.lab = 1.5, cex.axis = 1.5,
main = '', cex.main = 1.8)
abline(h = 0, lwd = 1, col = rgb(0,0,0,0.25))
lines(x = dates, y = s2.pe, col = s2.col, lty = 3)
lines(x = dates, y = s2.ne, col = s2.col, lty = 3)
polygon(x = c(dates,rev(dates)),
y = c(s2.pe,rev(s2.ne)),
col = s2.col, density = 20, angle = 90, lty = 3, fillOddEven = TRUE)
lines(x = dates, y = s2.mean, pch = pchm, col = s2.col, lwd = 3)
points(x = dates, y = s2.mean, pch = pchm, col = s2.col)
abline(v = as.Date('2020-07-14'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-07-20'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-07-27'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-08-03'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-08-10'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-08-17'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-08-24'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-08-31'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-09-07'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-09-14'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-09-21'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-09-28'), col = watering.col, lwd = s2.lwd)
# S3
plot(x = dates, y = s3.mean, ylim = y.lim,
type = 'l', lwd = 2, col = s3.col,
xlab = '', ylab = '', cex.lab = 1.5, cex.axis = 1.5,
main = '', cex.main = 1.8)
abline(h = 0, lwd = 1, col = rgb(0,0,0,0.25))
lines(x = dates, y = s3.pe, col = s3.col, lty = 3)
lines(x = dates, y = s3.ne, col = s3.col, lty = 3)
polygon(x = c(dates,rev(dates)),
y = c(s3.pe,rev(s3.ne)),
col = s3.col, density = 20, angle = 90, lty = 3, fillOddEven = TRUE)
lines(x = dates, y = s3.mean, pch = pchm, col = s3.col, lwd = 3)
points(x = dates, y = s3.mean, pch = pchm, col = s3.col)
abline(v = as.Date('2020-07-14'), col = watering.col, lwd = s3.lwd)
abline(v = as.Date('2020-07-27'), col = watering.col, lwd = s3.lwd)
abline(v = as.Date('2020-08-10'), col = watering.col, lwd = s3.lwd)
abline(v = as.Date('2020-08-24'), col = watering.col, lwd = s3.lwd)
abline(v = as.Date('2020-09-07'), col = watering.col, lwd = s3.lwd)
abline(v = as.Date('2020-09-21'), col = watering.col, lwd = s3.lwd)
# S4
plot(x = dates, y = s4.mean, ylim = y.lim,
type = 'l', lwd = 2, col = s4.col,
xlab = '', ylab = '', cex.lab = 1.5, cex.axis = 1.5,
main = '', cex.main = 1.8)
abline(h = 0, lwd = 1, col = rgb(0,0,0,0.25))
lines(x = dates, y = s4.pe, col = s4.col, lty = 3)
lines(x = dates, y = s4.ne, col = s4.col, lty = 3)
polygon(x = c(dates,rev(dates)),
y = c(s4.pe,rev(s4.ne)),
col = s4.col, density = 20, angle = 90, lty = 3, fillOddEven = TRUE)
lines(x = dates, y = s4.mean, pch = pchm, col = s4.col, lwd = 3)
points(x = dates, y = s4.mean, pch = pchm, col = s4.col)
abline(v = as.Date('2020-07-14'), col = watering.col, lwd = s4.lwd)
abline(v = as.Date('2020-08-03'), col = watering.col, lwd = s4.lwd)
abline(v = as.Date('2020-08-24'), col = watering.col, lwd = s4.lwd)
abline(v = as.Date('2020-09-14'), col = watering.col, lwd = s4.lwd)
mtext('Mean GCC Std. Anom. [ ]', side = 2, outer = TRUE, cex = 1.5)
library(xts)
library(ggplot2)
library(ggpubr)
library(ggthemes)
library(tidyr)
# -------------------------------
# Get GCC datasets
# -------------------------------
ecophys.dates = as.Date(c('2020-07-15','2020-07-22','2020-07-29','2020-08-05','2020-08-12','2020-08-19',
'2020-08-26','2020-09-02','2020-09-10','2020-09-16','2020-09-23','2020-09-30'))
ecophys.plots = c("H1P4W1S1","H2P4W1S1","H3P11W1S1","H4P10W1S1","H5P8W1S1",
"H1P2W2S2","H2P2W2S2","H3P9W2S2","H4P3W2S2","H5P9W2S2",
"H1P10W2S3","H2P3W2S3","H3P10W2S3","H4P2W2S3","H5P1W2S3",
"H1P1W3S4","H2P6W3S4","H3P7W3S4","H4P11W3S4","H5P2W3S4")
# PiCam GCC data
pc.fp = 'C:/Users/cjdev/Desktop/RainManSR/PiCam/Appended_Data_Master_Files/Entire_Plot'
# Funciton to compute daily 90th percetile GCC values from raw 30-min data
d90.fun = function(data30){
data30.xts = xts(data30[,11], as.Date(data30[,1]))
data.d90 = apply.daily(data30.xts,
FUN = function(x) quantile(x, probs = 0.9, na.rm = TRUE))
return(data.d90)
}
# House 1
setwd(paste(pc.fp,'House1','Raw_30min_Data',sep = '/'))
h1.files = list.files()
h1p4 = read.table(h1.files[4], header = TRUE)
h1p2 = read.table(h1.files[2], header = TRUE)
h1p1 = read.table(h1.files[1], header = TRUE)
h1p10 = read.table(h1.files[10], header = TRUE)
h1p4.d90 = d90.fun(h1p4)
h1p2.d90 = d90.fun(h1p2)
h1p1.d90 = d90.fun(h1p1)
h1p10.d90 = d90.fun(h1p10)
# House 2
setwd(paste(pc.fp,'House2','Raw_30min_Data',sep = '/'))
h2.files = list.files()
h2p4 = read.table(h2.files[4], header = TRUE)
h2p2 = read.table(h2.files[2], header = TRUE)
h2p3 = read.table(h2.files[3], header = TRUE)
h2p6 = read.table(h2.files[6], header = TRUE)
h2p4.d90 = d90.fun(h2p4)
h2p2.d90 = d90.fun(h2p2)
h2p3.d90 = d90.fun(h2p3)
h2p6.d90 = d90.fun(h2p6)
# House 3
setwd(paste(pc.fp,'House3','Raw_30min_Data',sep = '/'))
h3.files = list.files()
h3p11 = read.table(h3.files[11], header = TRUE)
h3p9 = read.table(h3.files[9], header = TRUE)
h3p10 = read.table(h3.files[10], header = TRUE)
h3p7 = read.table(h3.files[7], header = TRUE)
h3p11.d90 = d90.fun(h3p11)
h3p9.d90 = d90.fun(h3p9)
h3p10.d90 = d90.fun(h3p10)
h3p7.d90 = d90.fun(h3p7)
# House 4
setwd(paste(pc.fp,'House4','Raw_30min_Data',sep = '/'))
h4.files = list.files()
h4p10 = read.table(h4.files[10], header = TRUE)
h4p3 = read.table(h4.files[3], header = TRUE)
h4p2 = read.table(h4.files[2], header = TRUE)
h4p11 = read.table(h4.files[11], header = TRUE)
h4p10.d90 = d90.fun(h4p10)
h4p3.d90 = d90.fun(h4p3)
h4p2.d90 = d90.fun(h4p2)
h4p11.d90 = d90.fun(h4p11)
# House 5
setwd(paste(pc.fp,'House5','Raw_30min_Data',sep = '/'))
h5.files = list.files()
h5p8 = read.table(h5.files[8], header = TRUE)
h5p9 = read.table(h5.files[9], header = TRUE)
h5p1 = read.table(h5.files[1], header = TRUE)
h5p2 = read.table(h5.files[2], header = TRUE)
h5p8.d90 = d90.fun(h5p8)
h5p9.d90 = d90.fun(h5p9)
h5p1.d90 = d90.fun(h5p1)
h5p2.d90 = d90.fun(h5p2)
datefill = function(data.in, begin, end){
data.df = data.frame(as.Date(index(data.in)), coredata(data.in))
colnames(data.df) = c('Date','Data')
data.df.datefill = data.df %>%
complete(Date = seq(as.Date(begin), as.Date(end), by = 'day'))
return(as.data.frame(data.df.datefill))
}
h1.gcc = data.frame(datefill(h1p4.d90,'2020-07-01','2020-10-02')$Data,
datefill(h1p2.d90,'2020-07-01','2020-10-02')$Data,
datefill(h1p10.d90,'2020-07-01','2020-10-02')$Data,
datefill(h1p1.d90,'2020-07-01','2020-10-02')$Data)
colnames(h1.gcc) = c('S1','S2','S3','S4')
h2.gcc = data.frame(datefill(h2p4.d90,'2020-07-01','2020-10-02')$Data,
datefill(h2p2.d90,'2020-07-01','2020-10-02')$Data,
datefill(h2p3.d90,'2020-07-01','2020-10-02')$Data,
datefill(h2p6.d90,'2020-07-01','2020-10-02')$Data)
colnames(h2.gcc) = c('S1','S2','S3','S4')
h3.gcc = data.frame(datefill(h3p11.d90,'2020-07-01','2020-10-02')$Data,
datefill(h3p9.d90,'2020-07-01','2020-10-02')$Data,
datefill(h3p10.d90,'2020-07-01','2020-10-02')$Data,
datefill(h3p7.d90,'2020-07-01','2020-10-02')$Data)
colnames(h3.gcc) = c('S1','S2','S3','S4')
h4.gcc = data.frame(datefill(h4p10.d90,'2020-07-01','2020-10-02')$Data,
datefill(h4p3.d90,'2020-07-01','2020-10-02')$Data,
datefill(h4p2.d90,'2020-07-01','2020-10-02')$Data,
datefill(h4p11.d90,'2020-07-01','2020-10-02')$Data)
colnames(h4.gcc) = c('S1','S2','S3','S4')
h5.gcc = data.frame(datefill(h5p8.d90,'2020-07-01','2020-10-02')$Data,
datefill(h5p9.d90,'2020-07-01','2020-10-02')$Data,
datefill(h5p1.d90,'2020-07-01','2020-10-02')$Data,
datefill(h5p2.d90,'2020-07-01','2020-10-02')$Data)
colnames(h5.gcc) = c('S1','S2','S3','S4')
# --------------- Group by treatment types also
s1.gcc = data.frame(h1.gcc[,1], h2.gcc[,1], h3.gcc[,1], h4.gcc[,1], h5.gcc[,1])
s2.gcc = data.frame(h1.gcc[,2], h2.gcc[,2], h3.gcc[,2], h4.gcc[,2], h5.gcc[,2])
s3.gcc = data.frame(h1.gcc[,3], h2.gcc[,3], h3.gcc[,3], h4.gcc[,3], h5.gcc[,3])
s4.gcc = data.frame(h1.gcc[,4], h2.gcc[,4], h3.gcc[,4], h4.gcc[,4], h5.gcc[,4])
# --------------- Z-score function
z.score.fun = function(data.in){
data.mean = mean(data.in, na.rm = TRUE)
data.sd = sd(data.in, na.rm = TRUE)
data.out = (data.in - data.mean) / data.sd
return(data.out)
}
dates = seq(as.Date('2020-07-01'),as.Date('2020-10-02'),'day')
s1.col = 'navy'
s2.col = 'steelblue'
s3.col = 'orange'
s4.col = 'tomato'
watering.col = rgb(0,0,1,0.25)
s1.lwd = 1
s2.lwd = 2
s3.lwd = 3
s4.lwd = 4
ts.pch = 1
s1.labs = c('H1S1','H2S1','H3S1','H4S1','H5S1')
s2.labs = c('H1S2','H2S2','H3S2','H4S2','H5S2')
s3.labs = c('H1S3','H2S3','H3S3','H4S3','H5S3')
s4.labs = c('H1S4','H2S4','H3S4','H4S4','H5S4')
cexmain = 1.6
cexlab = 1.4
# ----------- Mean function
mean.fun = function(h1,h2,h3,h4,h5){
h1.z = z.score.fun(h1)
h2.z = z.score.fun(h2)
h3.z = z.score.fun(h3)
h4.z = z.score.fun(h4)
h5.z = z.score.fun(h5)
len = length(h1)
mean = rep(NA, len)
for (i in 1 : len){
mean[i] = mean(c(h1.z[i],h2.z[i],h3.z[i],h4.z[i],h5.z[i]), na.rm = TRUE)
}
return(mean)
}
# ----------- Standard error function
se.fun = function(h1,h2,h3,h4,h5){
h1.z = z.score.fun(h1)
h2.z = z.score.fun(h2)
h3.z = z.score.fun(h3)
h4.z = z.score.fun(h4)
h5.z = z.score.fun(h5)
len = length(h1)
std = rep(NA, len)
se = rep(NA, len)
for (i in 1 : len){
std[i] = sd(c(h1.z[i],h2.z[i],h3.z[i],h4.z[i],h5.z[i]), na.rm = TRUE)
n = 5
se[i] = std[i]/(sqrt(n))
}
return(se)
}
s1.mean = mean.fun(h1.gcc[,1],h2.gcc[,1],h3.gcc[,1],h4.gcc[,1],h5.gcc[,1])
s2.mean = mean.fun(h1.gcc[,2],h2.gcc[,2],h3.gcc[,2],h4.gcc[,2],h5.gcc[,2])
s3.mean = mean.fun(h1.gcc[,3],h2.gcc[,3],h3.gcc[,3],h4.gcc[,3],h5.gcc[,3])
s4.mean = mean.fun(h1.gcc[,4],h2.gcc[,4],h3.gcc[,4],h4.gcc[,4],h5.gcc[,4])
s1.se = se.fun(h1.gcc[,1],h2.gcc[,1],h3.gcc[,1],h4.gcc[,1],h5.gcc[,1])
s2.se = se.fun(h1.gcc[,2],h2.gcc[,2],h3.gcc[,2],h4.gcc[,2],h5.gcc[,2])
s3.se = se.fun(h1.gcc[,3],h2.gcc[,3],h3.gcc[,3],h4.gcc[,3],h5.gcc[,3])
s4.se = se.fun(h1.gcc[,4],h2.gcc[,4],h3.gcc[,4],h4.gcc[,4],h5.gcc[,4])
s1.pe = s1.mean + s1.se
s1.ne = s1.mean - s1.se
s2.pe = s2.mean + s2.se
s2.ne = s2.mean - s2.se
s3.pe = s3.mean + s3.se
s3.ne = s3.mean - s3.se
s4.pe = s4.mean + s4.se
s4.ne = s4.mean - s4.se
par(mfrow = c(4,1),
mar = c(2,3,2,0),
oma = c(1,2,0,1))
y.lim = c(-2.2,2.2)
pchm = 16
# S1
plot(x = dates, y = s1.mean, ylim = y.lim,
type = 'l', col = s1.col,
xlab = '', ylab = '', cex.lab = 1.5, cex.axis = 1.5,
main = '', cex.main = 1.8)
lines(x = dates, y = s1.pe, col = s1.col, lty = 3)
lines(x = dates, y = s1.ne, col = s1.col, lty = 3)
polygon(x = c(dates,rev(dates)),
y = c(s1.pe,rev(s1.ne)),
col = s1.col, density = 20, angle = 90, lty = 3, fillOddEven = TRUE)
lines(x = dates, y = s1.mean, pch = pchm, col = s1.col, lwd = 3)
points(x = dates, y = s1.mean, pch = pchm, col = s1.col)
abline(h = 0, lwd = 1, col = rgb(0,0,0,0.25))
abline(v = as.Date('2020-07-14'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-07-17'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-07-20'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-07-23'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-07-27'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-07-30'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-03'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-06'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-10'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-13'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-17'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-20'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-24'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-27'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-08-31'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-03'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-07'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-10'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-14'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-17'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-21'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-24'), col = watering.col, lwd = s1.lwd)
abline(v = as.Date('2020-09-28'), col = watering.col, lwd = s1.lwd)
# S2
plot(x = dates, y = s2.mean, ylim = y.lim,
type = 'l', col = s2.col,
xlab = '', ylab = '', cex.lab = 1.5, cex.axis = 1.5,
main = '', cex.main = 1.8)
abline(h = 0, lwd = 1, col = rgb(0,0,0,0.25))
lines(x = dates, y = s2.pe, col = s2.col, lty = 3)
lines(x = dates, y = s2.ne, col = s2.col, lty = 3)
polygon(x = c(dates,rev(dates)),
y = c(s2.pe,rev(s2.ne)),
col = s2.col, density = 20, angle = 90, lty = 3, fillOddEven = TRUE)
lines(x = dates, y = s2.mean, pch = pchm, col = s2.col, lwd = 3)
points(x = dates, y = s2.mean, pch = pchm, col = s2.col)
abline(v = as.Date('2020-07-14'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-07-20'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-07-27'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-08-03'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-08-10'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-08-17'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-08-24'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-08-31'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-09-07'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-09-14'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-09-21'), col = watering.col, lwd = s2.lwd)
abline(v = as.Date('2020-09-28'), col = watering.col, lwd = s2.lwd)
# S3
plot(x = dates, y = s3.mean, ylim = y.lim,
type = 'l', lwd = 2, col = s3.col,
xlab = '', ylab = '', cex.lab = 1.5, cex.axis = 1.5,
main = '', cex.main = 1.8)
abline(h = 0, lwd = 1, col = rgb(0,0,0,0.25))
lines(x = dates, y = s3.pe, col = s3.col, lty = 3)
lines(x = dates, y = s3.ne, col = s3.col, lty = 3)
polygon(x = c(dates,rev(dates)),
y = c(s3.pe,rev(s3.ne)),
col = s3.col, density = 20, angle = 90, lty = 3, fillOddEven = TRUE)
lines(x = dates, y = s3.mean, pch = pchm, col = s3.col, lwd = 3)
points(x = dates, y = s3.mean, pch = pchm, col = s3.col)
abline(v = as.Date('2020-07-14'), col = watering.col, lwd = s3.lwd)
abline(v = as.Date('2020-07-27'), col = watering.col, lwd = s3.lwd)
abline(v = as.Date('2020-08-10'), col = watering.col, lwd = s3.lwd)
abline(v = as.Date('2020-08-24'), col = watering.col, lwd = s3.lwd)
abline(v = as.Date('2020-09-07'), col = watering.col, lwd = s3.lwd)
abline(v = as.Date('2020-09-21'), col = watering.col, lwd = s3.lwd)
# S4
plot(x = dates, y = s4.mean, ylim = y.lim,
type = 'l', lwd = 2, col = s4.col,
xlab = '', ylab = '', cex.lab = 1.5, cex.axis = 1.5,
main = '', cex.main = 1.8)
abline(h = 0, lwd = 1, col = rgb(0,0,0,0.25))
lines(x = dates, y = s4.pe, col = s4.col, lty = 3)
lines(x = dates, y = s4.ne, col = s4.col, lty = 3)
polygon(x = c(dates,rev(dates)),
y = c(s4.pe,rev(s4.ne)),
col = s4.col, density = 20, angle = 90, lty = 3, fillOddEven = TRUE)
lines(x = dates, y = s4.mean, pch = pchm, col = s4.col, lwd = 3)
points(x = dates, y = s4.mean, pch = pchm, col = s4.col)
abline(v = as.Date('2020-07-14'), col = watering.col, lwd = s4.lwd)
abline(v = as.Date('2020-08-03'), col = watering.col, lwd = s4.lwd)
abline(v = as.Date('2020-08-24'), col = watering.col, lwd = s4.lwd)
abline(v = as.Date('2020-09-14'), col = watering.col, lwd = s4.lwd)
mtext('Mean GCC Std. Anom. [ ]', side = 2, outer = TRUE, cex = 1.5)
